Compiling quantum algorithms for near-term quantum computers (accounting for connectivity and native gate alphabets) is a major challenge that has received significant attention both by industry and academia. Avoiding the exponential overhead of classical simulation of quantum dynamics will allow compilation of larger algorithms, and a strategy for this is to evaluate an algorithm's cost on a quantum computer. To this end, we propose quantum-assisted quantum compiling (QAQC). In QAQC, we use the Hilbert-Schmidt inner product between a target unitary $U$ and a trainable unitary $V$ as the cost function to be evaluated on the quantum computer. We introduce two circuits for evaluating this cost. One circuit computes $|{\rm Tr} (V^\dagger U)|$, and we use this circuit for gradient-free compiling. Our other circuit gives ${\rm Tr}(V^\dagger U)$ and is a generalization of the Power of One Qubit that we call the Power of Two Qubits. We use this circuit for gradient-based compiling. As a demonstration of QAQC, we compile various one-qubit gates on IBM's and Rigetti's quantum computers into their respective native gate alphabets. Future applications of QAQC include algorithm depth compression, black-box compiling, noise mitigation, and benchmarking.