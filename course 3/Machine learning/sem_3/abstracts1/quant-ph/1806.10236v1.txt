We consider an algorithm to approximate complex-valued periodic functions $f(e^{i\theta})$ as a matrix element of a product of $SU(2)$-valued functions, which underlies so-called quantum signal processing. We prove that the algorithm runs in time $\mathrm{poly}(n\log(1/\epsilon))$ on a Turing machine where $n$ is the degree of the polynomial that approximates $f$ with accuracy $\epsilon$. Previous efficiency claim assumed a strong arithmetic model of computation and lacked numerical stability analysis.